# Install k8s and its dependent components

- name: update apache.conf
  replace:
    path: /etc/apt/sources.list
    regexp: "http://in.archive.ubuntu.com/ubuntu"
    replace: "{{ apt_mirror }}"
    backup: yes

- name: update package manager
  shell: apt update

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - nfs-common

# Kubelet will not start if the system has swap enabled,
# so we are disabling swap using the below code
- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: modprobe
  shell: |
    modprobe overlay
    modprobe br_netfilter

- name: Add kubernetes.conf
  copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
    dest: /etc/sysctl.d/99-kubernetes-cri.conf

- name: sysctl --system
  shell: |
    sysctl --system

# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd
- name: Add containerd.conf
  copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/containerd.conf

- name: Add an apt signing key for Docker
  # to install containerd
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: Install CRI and its dependecies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - containerd.io

- name: generate containerd config
  template:
    src: containerd-config.toml.j2
    dest: /etc/containerd/config.toml

- name: start contaienrd
  service:
    name: containerd
    state: restarted

# Installing kubelet, kubeadm and kubectl using the below code
- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
    state: present
    keyring: /etc/apt/trusted.gpg.d/kubernetes-apt-keyring.gpg

- name: Add Kubernetes apt repository for stable version
  apt_repository:
    repo: deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet # /usr/lib/systemd/system/kubelet.service
      - kubeadm
      - kubectl

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
    create: yes

- name: Restart kubelet
  service:
    name: kubelet
    state: restarted

- name: notify k8s-node ready
  command: "/bin/true"
  notify: k8s-node ready
