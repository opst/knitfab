#! /bin/bash
set -e

ROOT=$(cd ${0%/*}/../../; pwd)
DEST=${DEST:-${ROOT}/bin/images}
rm -rf ${DEST}
mkdir -p ${DEST}

DOCKER=${DOCKER:-docker}

if [ -z "${APP_VERSION}" ] ; then
	echo "knit app version is not specified!" >&2
	exit 1
fi

if [ -n "${DEBUG}" ]; then
	SUFFIX="-debug"
fi

IMAGE_REGISTRY=${IMAGE_REGISTRY:-}  # e.g. ghcr.io
REPOSITORY=${REPOSITORY:-}          # e.g. opst/knitfab
if [ -n "${IMAGE_REGISTRY}" ] && [ -n "${REPOSITORY}" ] ; then
	IMAGE_REPOSITORY="${IMAGE_REGISTRY}/${REPOSITORY}"  # ghcr.io/opst/knitfab
fi

# build images...
for A in ${ARCH} ; do
	PLATFORM=
	TAG=${APP_VERSION}
	case ${A} in
		amd64|arm64)
			PLATFORM="linux/${A}"
			TAG="${TAG}-${A}${SUFFIX}"
			;;
		local)
			TAG="${TAG}-${A}${SUFFIX}"
			;;
		test)
			;;
		*)
			echo "unknown ARCH: ${A}" >&2
			exit 1
		;;
	esac

	COMPONENT="knitd knitd-backend knit-vex knit-empty knit-nurse knit-dataagt knit-loops"

	TARGET=
	for COMP in ${COMPONENT} ; do
		TARGET="${TARGET} ${COMP}${SUFFIX}"
	done

	echo "building images for ${A}..." >&2
	BUILDX_SET=
	for COMP in ${COMPONENT} ; do
		BUILDX_SET="${BUILDX_SET} --set ${COMP}.platform=${PLATFORM}"
	done
	TAG=${TAG} PLATFORM=${PLATFORM} ${DOCKER} buildx bake --load \
		-f ${ROOT}/build/docker-compose.yml ${BUILDX_SET} \
		${TARGET}

	for COMP in ${COMPONENT} ; do
		echo "${COMP}	${COMP}:${TAG}"
	done
done

# generate image publish script...

if [ -n "${IMAGE_REPOSITORY}" ] ; then
	echo "generating publish script @ ${DEST}/publish.sh" >&2
	cat <<EOF > ${DEST}/publish.sh
#!/bin/bash
set -e

# publish images to ${IMAGE_REPOSITORY}
#
# This script is generated by build/lib/images.sh

EOF

	for COMP in ${COMPONENT} ; do
		echo "echo \"publishing ${COMP}...\" >&2" >> ${DEST}/publish.sh
		VARIANTS=
		for A in ${ARCH} ; do
			if [ "local" = "${A}" ] || [ "test" = "${A}" ] ; then
				continue
			fi

			VAR="${COMP}:${APP_VERSION}-${A}"
			VARIANTS="${VARIANTS} ${IMAGE_REPOSITORY}/${VAR}"
			echo "${DOCKER} tag \"${VAR}\" \"${IMAGE_REPOSITORY}/${VAR}\"" >> ${DEST}/publish.sh
			echo "while !${DOCKER} push \"${IMAGE_REPOSITORY}/${VAR}\"; do echo 'retry...'; sleep 1; done" >> ${DEST}/publish.sh
			echo "" >> ${DEST}/publish.sh
		done

		if [ -n "${VARIANTS}" ] ; then
			echo "${DOCKER} manifest create \"${IMAGE_REPOSITORY}/${COMP}:${APP_VERSION}\" ${VARIANTS}" >> ${DEST}/publish.sh
			echo "whils !${DOCKER} manifest push --purge \"${IMAGE_REPOSITORY}/${COMP}:${APP_VERSION}\"; do echo 'retry...'; sleep 1; done" >> ${DEST}/publish.sh
		else
			echo "echo \"no image to publish for ${COMP}\" >&2" >> ${DEST}/publish.sh
		fi
		echo "" >> ${DEST}/publish.sh
	done
fi

